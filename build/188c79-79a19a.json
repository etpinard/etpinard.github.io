{"block":{"height":800,"license":"MIT"},"readme":"<p>Demo of plotly.js polar charts added in <a href=\"https://github.com/plotly/plotly.js/pull/2200\">https://github.com/plotly/plotly.js/pull/2200</a></p>\n<h3 id=\"usage\">Usage</h3>\n<p>Boot with:</p>\n<pre><code>npm start\n</code></pre>\n","files":[{"filename":"index.js","body":"var Plotly = require('plotly.js/lib/core')\nPlotly.register(require('plotly.js/lib/scatterpolar'))\n\nvar figUrl = 'https://raw.githubusercontent.com/plotly/plotly.js/61e155cfa0a1525baf9a8383faa8264627d2a47b/test/image/mocks/polar_scatter.json'\nvar gd = document.createElement('div')\ndocument.body.appendChild(gd)\n\nvar buttons = [{\n  fn: zoom,\n  arg: 'in',\n  cnt: 'zoom in'\n}, {\n  fn: zoom,\n  arg: 'out',\n  cnt: 'zoom out'\n}, {\n  fn: cutSector,\n  arg: [0, 90],\n  cnt: '0-90 sector'\n}, {\n  fn: cutSector,\n  arg: [0, 180],\n  cnt: '0-180 sector'\n}, {\n  fn: cutSector,\n  arg: [0, 270],\n  cnt: '0-270 sector'\n}, {\n  fn: cutSector,\n  arg: [0, 360],\n  cnt: 'reset sector'\n}, {\n  fn: setThetaUnit,\n  arg: 'radians',\n  cnt: 'show in radians'\n}, {\n  fn: setThetaUnit,\n  arg: 'degrees',\n  cnt: 'show in degrees'\n}, {\n  fn: factorTicks,\n  arg: 2,\n  cnt: 'more angular ticks'\n}, {\n  fn: factorTicks,\n  arg: 0.5,\n  cnt: 'less angular ticks'\n}]\n\nPlotly.d3.json(figUrl, (err, fig) => {\n  fig.layout.width = Math.max(700, window.innerWidth)\n  fig.layout.height = Math.max(500, window.innerHeight - 200)\n\n  Plotly.newPlot(gd, fig)\n\n  let fn = buttons[0].fn\n\n  buttons.forEach(opts => {\n    if (fn !== opts.fn) {\n      var br = document.createElement('br')\n      document.body.appendChild(br)\n    }\n\n    var btn = document.createElement('button')\n    document.body.appendChild(btn)\n\n    btn.onclick = () => opts.fn(opts.arg)\n    btn.innerHTML = opts.cnt\n    fn = opts.fn\n  })\n})\n\nfunction zoom(inOrOut) {\n  var rRange = gd.layout.polar.radialaxis.range\n  var range = [rRange[0], rRange[1] + {in: -dr, out: dr}[inOrOut]]\n  if (range[0] < range[1]) {\n    Plotly.relayout(gd, 'polar.radialaxis.range', range)\n  }\n}\n\nfunction cutSector(sector) {\n  Plotly.relayout(gd, 'polar.sector', sector)\n}\n\nfunction setThetaUnit(unit) {\n  Plotly.relayout(gd, 'polar.angularaxis.thetaunit', unit)\n}\n\nfunction factorTicks(factor) {\n  var nticks = gd._fullLayout.polar.angularaxis.nticks || 12\n  Plotly.relayout(gd, 'polar.angularaxis.nticks', nticks * factor)\n}\n\nfunction radialType(type) {\n  Plotly.relayout(gd, 'polar.radialaxis.type', type)\n}\n"},{"filename":"package.json","body":"{\n  \"name\": \"plotly.js-polar-charts\",\n  \"version\": \"1.0.1\",\n  \"description\": \"plotly.js polar charts demo\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"budo index.js --open --live\",\n    \"build\": \"browserify -t es2020 index.js | uglifyjs -c -m | indexhtmlify > index.html\"\n  },\n  \"keywords\": [],\n  \"author\": \"Étienne Tétreault-Pinard <etienne.t.pinard@gmail.com>\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"plotly.js\": \"^1.37.1\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^16.2.2\",\n    \"budo\": \"^11.2.2\",\n    \"es2020\": \"^1.1.9\",\n    \"indexhtmlify\": \"^1.3.1\",\n    \"uglify-es\": \"^3.3.9\"\n  }\n}\n"},{"filename":".gitignore","body":"node_modules\nnpm-debug.log*\n"}]}